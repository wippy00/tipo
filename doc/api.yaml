openapi: 3.0.3
info:
  title: wasa-text api
  description: >
    This is the API documentation for the wasa-text project.
    The project is a chat application that allows users to chat with each other.
    The API allows users to log in, create groups, send messages, and more.
  version: 1.0.0
paths:
  /session:
    post:
      tags: ["login"]
      summary: Logs in the user
      description: >
        If the user does not exist, it will be created, and an identifier is returned. 
        If the user exists, the user identifier is returned.
      operationId: doLogin
      requestBody:
        description: User details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Mario
                  pattern: "^.*?$"
                  minLength: 3
                  maxLength: 16
      responses:
        "201":
          description: User log-in action successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  identifier:
                    type: string
                    example: "abcdef012345"

  /setUsername:
    put:
      tags: ["user"]
      security:
        - bearerAuth: []
      summary: Set user username
      description: Set a new username for the user by
      operationId: setMyUserName
      
      requestBody:
        description: User details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                new_name:
                  type: string
                  example: Mario
                  pattern: "^.*?$"
                  minLength: 3
                  maxLength: 16
      responses:
        "204":
          $ref: '#/components/responses/204_NoContent'
        "401":
          $ref: '#/components/responses/401_Unauthorized'

  /setMyPhoto:
    put:
      tags: ["user"]
      security:
        - bearerAuth: []
      summary: Set profile photo
      description: Set a new photo for the user by their identifier
      operationId: setMyPhoto
      requestBody:
        description: User photo
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                photo:
                  type: string
                  format: binary
      responses:
        "204":
          $ref: '#/components/responses/204_NoContent'
        "401":
          $ref: '#/components/responses/401_Unauthorized'
      
  /conversations:
    get:
      tags: ["conversation"]
      security:
        - bearerAuth: []
      summary: Get conversation of user
      description: Get all chats and groups of the user by its identifier
      operationId: getMyConversations
      responses:
        "200":
          description: List of chats and groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/chat"
        "401":
          $ref: '#/components/responses/401_Unauthorized'

  /conversations/{conversation_id}:
    get:
      tags: ["conversation"]
      security:
        - bearerAuth: []
      summary: Get conversation by id
      description: Get all messages of a conversation by its identifier
      operationId: getConversation
      parameters:
        - name: conversation_id
          in: path
          required: true
          description: The conversation identifier
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chat"
        "401":
          $ref: '#/components/responses/401_Unauthorized'
        "404":
          $ref: '#/components/responses/404_NotFound'


  /conversation/{conversation_id}/setGroupName:
    put:
      tags: ["conversation"]
      security:
        - bearerAuth: []
      summary: Set group name
      description: Set a new name for a group by its identifier
      operationId: setGroupName
      parameters:
        - name: conversation_id
          in: path
          required: true
          description: The group identifier
          schema:
            type: integer
            example: 12
      requestBody:
        description: Chat details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                new_name:
                  type: string
                  example: I salamini il ritorno
                  pattern: "^.*?$"
                  minLength: 3
                  maxLength: 16
      responses:
        "204":
          description: No content, operation successful
        "401":
          $ref: '#/components/responses/401_Unauthorized'
        "403":
          description: Not a Group
        "404":
          $ref: '#/components/responses/404_NotFound'

  /conversation/{conversation_id}/setGroupPhoto:
    put:
      tags: ["conversation"]
      security:
        - bearerAuth: []
      summary: Set group photo
      description: Set a new photo for a group by its identifier
      operationId: setGroupPhoto
      parameters:
        - name: conversation_id
          in: path
          required: true
          description: The group identifier
          schema:
            type: integer
            example: 12
      requestBody:
        description: Chat details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photo:
                  type: string
                  format: binary
      responses:
        "204":
          $ref: '#/components/responses/204_NoContent'
        "401":
          $ref: '#/components/responses/401_Unauthorized'
        "403":
          description: Not a Group
        "404":
          $ref: '#/components/responses/404_NotFound'

  /conversations/{conversation_id}/addToGroup/{user_id}:
    post:
      tags: ["conversation"]
      security:
        - bearerAuth: []
      summary: Add a user to a group
      description: Add a user by its identifier to a group by its identifier
      operationId: addToGroup
      parameters:
        - name: conversation_id
          in: path
          required: true
          description: The group identifier
          schema:
            type: integer
            example: 12
        - name: user_id
          in: path
          required: true
          description: The unique identifier of the user
          schema:
            type: string
        
      responses:
        "204":
          description: No content, operation successful
        "401":
          $ref: '#/components/responses/401_Unauthorized'
        "403":
          description: Not a Group
        "404":
          $ref: '#/components/responses/404_NotFound'

  /conversations/{conversation_id}/leave/:
    delete:
      tags: ["conversation"]
      security:
        - bearerAuth: []
      summary: Leave a group
      description: Leave a group by its identifier and user identifier
      operationId: leaveGroup
      parameters:
        - name: conversation_id
          in: path
          required: true
          description: The group identifier
          schema:
            type: integer
            example: 12
      responses:
        "204":
          $ref: '#/components/responses/204_NoContent'
        "404":
          $ref: '#/components/responses/404_NotFound'

  /conversations/{conversation_id}/messages:
    post:
      tags: ["message"]
      security:
        - bearerAuth: []
      summary: Send a message
      description: Send a message to a conversation
      operationId: sendMessage
      parameters:
        - name: conversation_id
          in: path
          required: true
          description: Conversation identifier
          schema:
            type: integer
            example: 1
            description: The id of the conversation to send the message
      requestBody:
        description: Message details
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/message"

      responses:
        "204":
          $ref: '#/components/responses/204_NoContent'
        "404":
          $ref: '#/components/responses/404_NotFound'

  /conversations/{conversation_id}/messages/{message_id}:
    delete:
      tags: ["message"]
      security:
        - bearerAuth: []
      summary: Delete a message
      description: Delete a Message by its Id
      operationId: deleteMessage
      parameters:
        - name: message_id
          in: path
          required: true
          description: The message identifier
          schema:
            type: integer
            example: 1
            description: The id of the message to delete
        - name: conversation_id
          in: path
          required: true
          description: The conversation identifier
          schema:
            type: integer
            example: 1
            description: The id of the conversation of the message
      responses:
        "204":
          $ref: '#/components/responses/204_NoContent'
        "401":
          $ref: '#/components/responses/401_Unauthorized'
        "404":
          $ref: '#/components/responses/404_NotFound'

  /conversations/{conversation_id}/messages/{message_id}/forwardMessage:
    post:
      tags: ["message"]
      security:
        - bearerAuth: []
      summary: Forward a message
      description: Forward a message to another conversation
      operationId: forwardMessage
      parameters:
        - name: message_id
          in: path
          required: true
          description: The message identifier
          schema:
            type: integer
            example: 1
            description: The id of the message to forward
        - name: conversation_id
          in: path
          required: true
          description: The conversation identifier
          schema:
            type: integer
            example: 1
            description: The id of the conversation of the message
      requestBody:
        description: Message details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                chat_id:
                  type: integer
                  example: 12
                  description: The id of the chat to forward the message
      responses:
        "204":
          $ref: '#/components/responses/204_NoContent'
        "401":
          $ref: '#/components/responses/401_Unauthorized'
        "404":
          $ref: '#/components/responses/404_NotFound' 

  /conversations/{conversation_id}/message/{message_id}/react:
    put:
      tags: ["message"]
      security:
        - bearerAuth: []
      summary: React a message
      description: React to a message
      operationId: commentMessage
      parameters:
        - name: conversation_id
          in: path
          required: true
          description: The conversation identifier
          schema:
            type: integer
            example: 1
            description: The id of the conversation of the message
        - name: message_id
          in: path
          required: true
          description: The message identifier
          schema:
            type: integer
            example: 1
            description: The id of the message to react
      requestBody:
        description: Comment details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reaction:
                  type: string
                  example: "🗿"
                  description: The reaction
      responses:
        "204":
          $ref: '#/components/responses/204_NoContent'
        "401":
          $ref: '#/components/responses/401_Unauthorized'
        "404":
          $ref: '#/components/responses/404_NotFound'
      
    delete:
      tags: ["conversation"]
      security:
        - bearerAuth: []
      summary: Unreact a message
      description: Unreact to a message
      operationId: uncommentMessage
      parameters:
        - name: conversation_id
          in: path
          required: true
          description: The conversation identifier
          schema:
            type: integer
            example: 1
            description: The id of the conversation of the message
        - name: message_id
          in: path
          required: true
          description: The message identifier
          schema:
            type: integer
            example: 1
            description: The id of the message to unreact
      responses:
        "204":
          $ref: '#/components/responses/204_NoContent'
        "401":
          $ref: '#/components/responses/401_Unauthorized'
        "404":
          $ref:  '#/components/responses/404_NotFound'
    














components:
  schemas:
    user:
      type: object
      properties:
        username:
          type: string
          example: Mario
          pattern: "^.*?$"
          minLength: 3
          maxLength: 16
        id:
          type: string
          example: abcdef012345
        photo:
          type: string
          format: binary

    chat:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: I salamini
        photo:
          type: string
          format: binary
        type:
          type: string
          enum: [chat, group]
          example: group
        participants:
          type: array
          items:
            $ref: "#/components/schemas/user"
        messages:
          type: array
          items:
            $ref: "#/components/schemas/message"

    message:
      type: object
      properties:
        text:
          type: string
          example: "Ciao"
        photo:
          type: string
          format: binary
        from:
          type: integer
          example: 1
          description: User Id
        forwarded:
          type: integer
          example: 1
          description: If forwarded, the chat id
        timestamp:
          type: string
          format: date-time
          example: "2024-12-26T14:16:10Z"
        reactions:
          type: array
          items:
            type: object
            properties:
              user:
                type: integer
                example: 1
              reaction:
                type: string
                example: "🗿"

  responses:

    200_Ok:
      description: Ok

    204_NoContent:
      description: No content, operation successful
    
    401_Unauthorized:
      description: Unauthorized
    
    404_NotFound:
      description: Not Found


      
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT # optional, arbitrary value for documentation purposes